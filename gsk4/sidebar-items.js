initSidebarItems({"constant":[["NONE_RENDERER",""],["NONE_RENDER_NODE",""]],"enum":[["BlendMode","The blend modes available for render nodes."],["Corner","The corner indices used by `RoundedRect`."],["GLUniformType","This defines the types of the uniforms that `GskGLShaders` declare. It defines both what the type is called in the GLSL shader code, and what the corresponding C type is on the Gtk side."],["RenderNodeType","The type of a node determines what the node is rendering."],["ScalingFilter","The filters used when scaling texture data."],["SerializationError","Errors that can happen during (de)serialization."],["TransformCategory","The categories of matrices relevant for GSK and GTK. Note that any category includes matrices of all later categories. So if you want to for example check if a matrix is a 2D matrix, `category >= GSK_TRANSFORM_CATEGORY_2D` is the way to do this."]],"mod":[["prelude","Traits intended for blanket imports."]],"struct":[["BlendNode","A render node applying a blending function between its two child nodes."],["BlurNode","A render node applying a blur effect to its single child."],["BorderNode","A render node for a border."],["BroadwayRenderer","Implements`RendererExt`"],["CairoNode","A render node for a Cairo surface."],["CairoRenderer","Implements`RendererExt`"],["ClipNode","A render node applying a rectangular clip to its single child node."],["ColorMatrixNode","A render node controlling the color matrix of its single child node."],["ColorNode","A render node for a solid color."],["ColorStop",""],["ConicGradientNode","A render node for a conic gradient."],["ContainerNode","A render node that can contain other render nodes."],["CrossFadeNode","A render node cross fading between two child nodes."],["DebugNode","A render node that emits a debugging message when drawing its child node."],["GLRenderer","Implements`RendererExt`"],["GLShader","An object representing a GL shader program."],["GLShaderBuilder",""],["GLShaderNode","A render node using a GL shader when drawing its children nodes."],["InsetShadowNode","A render node for an inset shadow."],["LinearGradientNode","A render node for a linear gradient."],["OpacityNode","A render node controlling the opacity of its single child node."],["OutsetShadowNode","A render node for an outset shadow."],["RadialGradientNode","A render node for a radial gradient."],["RenderNode","A node in the render tree."],["Renderer","Base type for the object managing the rendering pipeline for a `gdk::Surface`."],["RepeatNode","A render node repeating its single child node."],["RepeatingLinearGradientNode","A render node for a repeating linear gradient."],["RepeatingRadialGradientNode","A render node for a repeating radial gradient."],["RoundedClipNode","A render node applying a rounded rectangle clip to its single child."],["RoundedRect",""],["ShaderArgsBuilder","An object to build the uniforms data for a `GLShader`."],["Shadow",""],["ShadowNode","A render node drawing one or more shadows behind its single child node."],["TextNode","A render node drawing a set of glyphs."],["TextureNode","A render node for a `gdk::Texture`."],["Transform","The `GskTransform` structure contains only private data."],["TransformNode","A render node applying a `Transform` to its single child node."],["VulkanRenderer","Implements`RendererExt`"]],"trait":[["BorderNodeManualExt",""],["RenderNodeExt","Trait containing all `RenderNode` methods."],["RendererExt","Trait containing all `Renderer` methods."]]});